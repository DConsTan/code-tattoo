%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.6 (Build 16G1314) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 353 174
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 353 174
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: FXTHMI+WenYue-GuDianMingChaoTi-NC-W5
%!FontType1-1.0: AAAAAB+WenYue-GuDianMingChaoTi-NC-W5 001.003%%CreationDate: 4/20/18% Copyright 2018 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (001.003) readonly def/FullName (WenYue-GuDianMingChaoTi-NC-W5) readonly def/FamilyName (WenYue-GuDianMingChaoTi-NC-W5) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition 20 def/UnderlineThickness 40 defend readonly def/FontName /AAAAAB+WenYue-GuDianMingChaoTi-NC-W5 def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} forreadonly def/FontBBox {-195 -283 1196 944} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BECF1C5066694AE864EFC9A863DDE6D4B9CBD0D2B278C134BD8A60B58EA633EF6B5FC94A90A2396C406684764E79A3225DF9754A63B72D16FB185A5BCF2D58F4608684F782CE77F672453E416E53EEF765BB1FC0A7604BF819DD28AD73F6D857A26B50F7E388414B50F2E8DBF6CE483654A0716F946586F8BA2BE71149BB2C010F2FA300E1D1DE9AC30F09FB927CE9E9F34F5FF60F8719241B28139D8AEDC3A6CEA601DB9E54C92120E60C36878A3390FEF9F8EE6949EAEAC849422FE2609869446A9ABDF57284A1536F6F3C4ABA92E851A18C705EAD525D9E63B31BC06B9BE6FB274F3649CAAD0B3522BE05CD31BC80228E9ED50882027BB21B0C3C1C44A10309FBF244E71B0BBB7A2878FB008B977275B31A19269F5C94F697058E92A23B61A35E034C32559619377B0CF12525FC025B297984527181644C39AB832F23D3450218DE3295B31FB3BD7BD380F14876034AFAE253BA21C5C903C3E439234298DCE66EA759AB3C8F4B7C25115F0BFA4C6C9E3CE4E00AFD6C0BD228FE88CD3FDE39A00EDB5382B0DE77E2925F078C87179E00AFFBD081E4868D569543E31CD8AF244DCF739C603816874081CA62EE971A49295C049870422A6D6AD7724BE447AF9E3DB4422208092DDE7A289BD9E3BB95A7DD10AEC1EE3E8589FA4C03A4A9F49C23D9B6CE52F8C9FD7DA4A56A4402F809B1547CD82AA867410F1859ED6E7ECD5AF7BA950910FFB44361DF222E215995FB8CE3D1D2DE312B5DB41946E70111600AD59023DC9FF2C7929F419D19D711B96912C06ED0F0E6D18E8941D571C3BCFB148506139BFBF511D5F6A1E28001A79097D0CF36A5A05143BF1D3378F037F643371403044897AA17331E5C4A942D441CA2B7F39ABB4A358BDA0FE8E71B6347421A18172CF88CF4863AB716EF61C9F312ED7A36A72B435CC6C988B27E97FCDC3B603F737267C8786505DE9629E2F0BD4883BF5A002AB4C925B0276E2AD198103F892E69F29D6B6984482BF81F5670846D213EAE8008FB7CCC5704F8D705F284E23EC13BCD3BF5121682FEB6A69BD84D8A5B43B106235EA5B726126FA66A25EA9754CAD9B4F9B10A3078E4A43DD7462442D2B952BA4E145ECB9BE0FE876F35F5D119BBE82C2F96230561E204DE6E355A05819535BC0ED803254A96E833B2A5284D106BC9C7AE28F578DF163C896A9D081F34858B43AFC38764FB52F5FF496BA3DE42B2557CDAAEDCAF9646D466D6F6C958DC16139748658E36836D2DBEF1C2B301DB7AAFC0BCCDA149157E076E50BB4F33AB7465C7AB1ADE8102DDDD9EEC1FA8C600C33FCA26A14800C1EE28DF2E42F5A41696E448F03C8066134571AAE7FA5FB843E98C3E87248B3D07D84469EE0CEF1B43D94D7A4A129214B6E9D1C00AE2D86AE3031700BE408A4F43CD63F8C32FAE965B6B48102EF0482449DCEFF87EA33B87BF7ABAE27CBA7F61D0C492C49580D8CF61E36ED3601F5783A7E89A488DEB178F2B9EA0A392D134B71311FDCF2914F917B8D579E95D25E274B62B4837BFCDF2E0C0EB3DB966D60BFBF9978DD6B92F8C6C04AFFEC00FF16544ECC2B19DF9E4116A4C12392E7F4853AB7100D7AF646A15E7BBDED7D2AFD5104841E4152EC870A3417ACC2AD94FE7BD701C6545F7B94CDE2A9192D0BAFC0A4F605BD068B07608B5CB69B80B4721BC6D24179BA5AC7873C1E67DC46C12815E06C03C36A597887F840B3968D4FA8A5BC71C97A20F23027B53B4578A8349C3471C00B50D6DF6A5A5EA28AA6053F843B0E04B80C3ECE1B972F8AADFC3808734C634E800D374B1627D63C40BD9FB2143F0F55F15F1379FB890ACBDD0B09FB5AC5494650EA151DCC7DD66A0EC5AB8BE200500FF3325077CAAE686EC287E4CA2543F1D20778132BFE3D577DD7A19688622FE62A30BFAFB0AED872F0A58B4EA709F9C508EF7566B80EB4A2A3FF0B6746DB529C56DA07ABF197A9AAB43B219244F055A12644C37E749E783FA6CD7BA04666B106F0F22178C7677F52041B6A84CFB46EE4CABE03EA68ECF0EB73C1558D0C7FA22A33FA7F1DD378CBDD2D69EE8434718DA604ACC1E3BC6B07D5FE7779BEBB7ADAA6A2D91A15FF2AAC2AEEDA1AEDE8264C3BF06D6D8B87F39E8AB2E68ADB428553DAAA55E04779F87F3F510AB1BF1DE2DF2F0332FB7E021E08F404F07DC457D40EA2426CBA8E7B5DA26F69C74524174CD84B664F322571DE995CDF0399FDDF9226B3668F2CA007EEE3C8E43B3A1EFFE1A391DDE84CA6E33C311046CFAE8722BCA961117A23A6D48F3B07AEA5366F9E2D7E9468215613D7340696025353A9DDB826718B3382BFB67690C1B546176BA34BDB93E28D08425982FA40AE15CC44329FE27C0632E3ED1F9AF141337F3BF5E05A8DB056F674D3DEC6E146BB026AEA07F3429A06C4F1539027C5C8A8829A75F47BEAA664B43108CB0ECB20409D567DED7B578191A7FE9613890DCBB9DEEFFD4F8BAE6B014247DD710F027D5DAD2259C7804129B11467344C2357959225C18C721D3C6B5F1E2828DEC1CE52F83526EC262FD0E3D1C46474119C5E65C477C68644FC5F9B8AA8684340F2D31B7C42E7E403D60A41CBF7183DEC2DD44A797B782F229E419C76BD94EB85D4AE62FA2C39C8BBD9E2134B923BE1407CB3C536278164E8091118B7CEE91098D3150128749FCB5C2B62A4637420D0B978D1B3F41977D5956D02B317B25FC00644B5E2185BE866D07C5CF3017F95C526C08252FD0E27C1D9CD1682034A9F465A56CCA259BEBA3467D7021A57687CA31416609002A0B958903783E93720E52F65C2B5DF7EEA7CABFE783E94CCA72081ADFBEE7915F335AE87A4CE232AF57AB8DBEA7FF03D522FEE08CAA1C8596C68266CB6A552B177720FF1C6EFA3ACF756F941643E2612E8A71E0AA2242A1AA793238CA12513A50245E8DF2BF23A9E8273F0812773349FA2E8FC2E834CAA4EF5C2F1016DDF1046D748B2A6B67557C3696ADDB7CBC6F0E0A7FFA53E72CBF04BF52062AC5492DF22B5CADD7A58AC9A67152D18F6D0FA9E17C8FC549EEFB601EBFEE4D14179452E9E1756B78317C20DDC55232B2F42A2D088A05E9BAF4FDB62B224F71DA59CB5DC9D7FD8A435CAA7BC78BF96B763BE87534B801C455C5EEDCC126DC7AB1A1B8BE9A15754BF1AB39190CA29C702640C5DBD56430CDAE36B7D8ED505559DAB6EEF78F4342E691E7B4BD8B5DE7E8B17A7D6C0949D977F0708DAF620C2254F622490CB3BD015265DF5F18D9533C39F44C3D36015E3E772C6854639CDAB274E09B3B0608D1FB699DA0E6485D30D7FF1FEDB4949845D25B98BC81EC0FD6B3B676C13E9619BCDEA157581D12FE654E70CEE49ABD436D646D9F037E4261108952F0DAFC8C168CFF5736328EE27D865FCAE7D9BB972F4A1462C726EBA6AED78F62DF152ED97E8AD6AFB6E01C073999C7DA709405E0CEF91009015EACAB33D960D50BB76E27308EA1A2D776C42ABE2BB0592A7379779C86D78D9403F4BE658528CC68B710FB26FBFF3188DD57C75C5CE9C096849DC0C497AE85B214F1DD76D490204568A86E9B390D26CDBA2DAE88D012992C0E18190B21BEECCB3DF758B0E318153386B815700B7BD1954198D97EA2B7E788E230A0F2BB9F9D81A327CAB932389127FB4DB6D85387904640269B051189199DC04679BB37A40C36043B1F3C84E8671CE033BFAE30B9736D538F0B94314A18587897F6524ACF6723D09444EE8BAF3781D1D4B8AC5BE5511BC2504EE889C25BB00AC9BC21C184A203036504F0E11147478B4D28CA56748121245B2FFF92E0FB189E4079A8E8DE37A21F082DED2AD50069B0024E010665237601F08846C6185F66E49A46B3DCB05DE71A9F86A7B51421EA2F0961C9D913F5A909BB9121527A3CE23BA565A84175B85A7CA17E1A8623B0EBF9488FBC26D3B623142D6E9DF72ABE0079A980426BDACEB2398F0DFA8137DAAFEDE1EE211EEBDDD4CF8342D315C58262F9B67B20A5E1A575DE570CAD53913C22248205A93F50F0E5EBCE901E9C720AC7D32247C0D939A69DCD8901CDE66209428D7655D7F321B935B309FB61D51B2C633ED3AB283FDFC4959DC30743F2F6F6FD97796B1CF675FDA157D3BF37C617CCD694C02C538BC7B415C24EEA6027DA51F6772C9079108390BB78E0A9155ED1940F076BE8BAC47DDFC216D0B0ACC4C3B530F28F5F192658BD3612585F5AB2976D79EA5C12459FA6C8EE3240476CEA452D24AC9B8869CFBAD16343640A598A071A2CF60FD180E98DE3C67763A7A0C15B5266AF8531CCAE51D265649E14FF52B2DC42A08F6394704111A807CD3430021002F2B259D4117BA2ADFF3D2151EF613B9CC31091EAAA64D645DC5B4BC931C157F79A94A77CB5D3C942AC747C4D880C06E33B7FE857D02D06B8BE7D58BA3CEB7901E3761DC49EFBA43B6E2C0EE09B16A79FE5BFF8F11193480933588F304F749CFED31541A6399425FC21978CBEBDF39AEABDD4B88A6E208B1B32DC8FD4C2693F2DCCC04FBDF27698D34A294A49B1C1E8FBB92D80FED12ED489687F3823CD695AB861BD4A72293E76C42F36C7034A0A8667B59879685DDC1821092A246FA1CD138CF7CB18DEBA6122F8B8022A1E964F4C186BC2690AC9E7909956A18BB5CA4878977A2A7483ED4C2FCDBB019242303DB7A3BCC879DBB8F94A1703481B4A999ECD312C481C100319328F529187F7E5B9001EAEFC923D80B37C3AC41E6A8F6E221695FBABA1EF59D97F8AA0E940BEE2E4DC1197C337E7C1500ED087F690EF355956D69606178106947E661FF647AD8D09315866463583D5BD2390DC375AB4A0DD0FB658F4E271F1D3C37E1CA3BD2D059263D128463CE93E9CC0D26A60CFAB53C098AE47B0663F65BB5408B9EA8911CFF6784897D1C7B6B2B2FA96530581462AEA98F01BD8E48C8E923F94C16FF1247505BD23A5667DEC05AB78F83B3E7D0097F372F5D663620CAA01E2DD8D44F74D7C1D7F9ED8190788CADB928A3E9D575227216AACAC6AEB2836A8E108817CB7EEC70F5F2AEC42D4BA1F4B882FE2AB1137A630409366912B9C12761BF34C24602A8DB9386D53CB781503F9782763A95523D973BEA0B983D307FDCC5802047459833C22706C198FD6CEFD8B1315E44041691D1A5697BFA33A58B458242194C3E2743F442F222F80B7AB03A2E5E71C44EE44594DC0DFBDAAA10E5444585B529BE06F68B21E7A12EE4B73576A365703F618575FD32B7B6BE47E3521048375A0FF14E6E5EFB3AAC8B3881442308517D36D55A6CA30CACC0E3464D2D5EFD67A0EEEA87737375647FCAB4B5338F7E8FA83BD4CF5792F91639B61602B04673D2DD095A3B37A7C9D5D75D5BD91822DF859099F2ECB5FD131C0070CD2D8EE8D70C0C4FB52300BFAC9620CA7010871762E533D119A0BBBAAC07C92A4F42E1DDCEDC459D2C9EF8970E1787BD4A4D9B399A0816ACC8C8D60E8931007DFF7CC3FFA7B884E1B747D6F5883D621E4682AC770972E52B664EFC0F15810FB31890E3CB2850BBCFB6B7773F5B9B33909A2616ED784E93DB14E6CB753BAB8655552CBDD8037516F1E2174D3F1AEC2D18B2B72F141E056247EB9185F7502C09BC2FEA5037F88E1A977538CB544387FFB1A3121D6A53F4E739B5349D02FBE1A89C3F24B24EA74D298973BE3C27155AECD3B7FC909B3F5048A6E0C8B664C8078A26F78F42A366470489BB444B5DB5182C784F2405A65EA90E9EEAEB46D104C61E295566F307F740008F99020D5F1BD97523DDC0EF56E8A73680CAB742ED78CE4DC3600F8D9314A44B202424263195897A50AF243C36D8EE7707DE7D514FDEDC5C4AC6D92A34CE92D3CD24F07D1419320D77780C96FCF49744E7510EEA0D737595D6A0FC71F0647599EDAF7B7A791BDC9EF76A124F486DE476ABD286DF1AA20EDD8A43D2E85E41115B65417A60A0B795AA12897EB72C58CDD22ECA85904C5D749A5E6F7D16B03B1641864D4C0C655D8AA5F2C73AA8BA1D30E377D6379F8B328EBF321262F9621860101E86793465125F7090569908BE1618A9FA8829CA86561F24226FF0639055ABE4DD3723CF3D79EB8ABBCF78F72FA8601D83D78265E819F4596E27166BC4C16B0D583A1FB6E03F02CF001A7AD3EE414324FC412734A374AE7FC9C71843056DE150F977E5F7D5359EE7DD613521280350AA03E6B32BC7E8B517171F832E1AF43F00AAEE2071B0D212E375745348C682D9DD3B4E95FA33CBB5E8914EA6F746D8CBB977C96248D21998680F88012E135194F1522AC571ACE10359CD1A37128BEBD5A0EF57C0762A5094B7CA720E1DA3D4FCD31A997D51DABAE899F3416515639D54A63AD412BA142787170ECE739D329C1F549B2D92CC11690AD32812667E722A02B542857D02112C4FD5B62DD96BAF828F0CEFB1B3440FF35D196884EFB22DE1151987D8C847C4A903F027832BD10590212E2388FC57F59B7245DF2B7F6FD2B12CCCC0857CE462771EDF42CE246FA1C152EDAAD1839B3423B8CEC516A76E0A41393776631053C18FCC1D94D8AF96E89387C780C1DBFF6A37E36D2E154340B2B3564C3A0E6C070C1940BFEEF042F6BEAC5CABC9DAF7CA866360F0FD5C71819D52A64D1DC5624B35A09CEE89D27B65EAE983A7561BC784493A01ADAABAA943108821951908A4E40E07A4A7FCF3E47E6E7B667B214A4431881BFC3D720997B1CCD6F5EEF0E9FF4050E3100916C6B5FB7A661B0A2259CE7315D9B863B36A88F46F36EFA3444B164B3383D4952889A352F2B7BF197B6C76260D9F401E83389E62380ECD199F2302D0B2CBF99AC1EEAB475C9AD29D2B3AA379771A5CB448454B3A09A349CA1E93DFBD1BD915C08498FB54987C6573C2CFC6F453E86B84C35E42E2EFA235E0584621CD39DCCBB002537E2A55D6F2F99DDBD924CC5D434D45477190B9C3787ED0B93BB904EA73089F19847887506801F6E4FB79EF3CA0C88F95CF6BBF2AC8D96B66427689E8AD5DEB15747E1B6FF1B1BBC937B0CE9E58E3697F4210BB894424847028C2210A64221F07ED47C6C7B3CCA938094C2343987CE9B52400F6EA83762FD13A8EDC5FB2280956D69679FE3B78507CD5ABDEC034A2F3F51C3287FC7F5C8642DA600578D8F737486CF10EE13BE0F6E97F831E6A13E71D9FFB74FDDB6B7B3CA45D1951E06D94283F218C7814DA1902CF627616E779FB13E292E9197F07ADC7DB8947312CBDD37D6CD9033D2B653BFB123807123BFE1EE751E23445F398079CBBF945EF88E277D14080A434D477860D835B14DE87BA77E759FDC657252C3AE88F49BD8789638DF4249BE3D09A9894E9C61FEA61F5F1520F8E1FF36AA6C3F273E693D80A57C86FD14337F4B7C8BD4353324F5782977F8FE39749709AEAF603D1EAC1A6D424044BD9F1F301913666983514CB8ABFFF17EC51B9108482C1ED93B6C649004E90F03946D1E81D28AC3E6BE77A5F29F64E12B1B194A41AD0D4C156B3807C671FB05D2951C74130728700635599564D095C27FA8F96AD343ABB9755F1A7FD56FB03EF60ABBFC8114E608569E30092CC406D99A5A45CB1A4ACE5D3F5D279979E0B003FF51CC1C60DD231BB0AD039899896045C0D6D458682EC4850A2CDBC372289D65B1C833A1B2AA70B38A9E0CEB612F26852F302B5A0CF5AA8F9D5C1D8636CD947C2D6B2BA5F829A831A071948EE4FC4E5449A7FCA2038F35DF62264312D7257BADD9F973374A64C178BB1C818A2377C04EF4638D04300DFD77440F5EB2AC013815777192FCABDE25A3B1E07149549AC1B2ADECD3D907CA2DC74B1477B93807D36B84D74B27F05BA5500D7AC4FB9961FC204C797B3E960F581BFA79544B1A2F7D692E16646E6F20069A84BE72B3A48731E2435367E24534F36C7796AA03854FC13CC90D74A9FC881C3D8E85B76FBB10040F0DADEE2394BBBFE6CC689E9AE04EC52C52383F10FA0AE69AD99FFF5A8BA769AF472C7B8587328759DB9558D6C08B6421C1392068A4613B9957FBDC27DB7E74DC276AAF9BE1B76FE58406CF5349ADDE09D39A5D01E100516CB839EDAEBCDDFBC304932ABF4B35384510C768E5DEDFFE776D3DDE74551160405AD8FA35D436CD15926D6060B133E5ED6F938F6B303EDD53A1B4248A0DDD6F3F85768D0C484E5DA4F4654972178C1591805659FDF877761E5740E90748DFFF039D12484D10A6DE79F63AEAC8B5833472707D9AD88B07BF050632D1662E4A29D91E541FC28BE2051F215522BE51C180B984AA55B49ACEDABC4CC953B7EC4EDFF6C5F1F1F95FE9D93D9ABBC952670E582DC398F84F8A2B04874BA3E39DB40C59602E219211533F6F9F6049E8BBC2FA53D983E6A31E84FCE124EFFB36ADA32E8C50046D6E8AFD3820531EB3B040196ABC1B8050B07ABCC2FE3A9E3CE982626AE1AC30E92EC26144F905CE1593B4F1400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%!FontType1-1.0: AAAAAC+WenYue-GuDianMingChaoTi-NC-W5 001.003%%CreationDate: 4/20/18% Copyright 2018 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (001.003) readonly def/FullName (WenYue-GuDianMingChaoTi-NC-W5) readonly def/FamilyName (WenYue-GuDianMingChaoTi-NC-W5) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition 20 def/UnderlineThickness 40 defend readonly def/FontName /AAAAAC+WenYue-GuDianMingChaoTi-NC-W5 def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 0 /cid1581 putdup 1 /cid1826 putdup 2 /cid2155 putdup 3 /cid2707 putdup 4 /cid3614 putreadonly def/FontBBox {-195 -283 1196 944} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BECF1C5066694AE864EFC9A863DDE6D4B9CBD0D2B278C134BD8A60B58EA633EF6B5FC94A90A2396C406684764E79A3225DF9754A63B72D16FB185A5BCF2D58F4608684F782CE77F672453E416E53EEF765BB1FC0A7604BF819DD28AD73F6D857A26B50F7E388414B50F2E8DBF6CE483654A0716F946586F8BA2BE71149BB2C010F2FA300E1D1DE9AC30F09FB927CE9E9F34F5FF60F8719241B28139D8AEDC3A6CEA601DB9E54C92120E60C36878A3390FEF9F8EE6949EAEAC849422FE2609869446A9ABDF57284A1536F6F3C4ABA92E851A18C705EAD525D9E63B31BC06B9BE6FB274F3649CAAD0B3522BE05CD31BC80228E9ED50882027BB21B0C3C1C44A10309FBF244E71B0BBB7A2878FB008B977275B31A19269F5C94F697058E92A23B61A35E034C32559619377B0CF12525FC025B297984527181644C39AB832F23D3450218DE3295B31FB3BD7BD380F14876034AFAE253BA21C5C903C3E439234298DCE66EA759AB3C8F4B7C25115F0BFA4C6C9E3CE4E00AFD6C0BD228FE88CD3FDE39A00EDB5382B0DE77E2925F078C87179E00AFFBD081E4868D569543E31CD8AF244DCF739C603816874081CA62EE971A49295C049870422A6D6AD7724BE447AF9E3DB4422208092DDE7A289BD9E3BB95A7DD10AEC1EE3E8589FA4C03A4A9F49C23D9B6CE52F8C9FD7DA4A56A4402F809B1547CD82AA867410F1859ED6E7ECD5AF7BA950910FFB44361DF222E215995FB8CE3D1D2DE312B5DB41946E70111600AD59023DC9FF2C7929F419D19D711B96912C06ED0F0E6D18E8941D571C3BCFB148506139BFBF511D5F6A1E28001A79097D0CF36A5A05143BF1D3378F037F643371403044897AA17331E5C4A942D441CA2B7F39ABB4A358BDA0FE8E71B6347421A18172CF88CF4863AB716EF61C9F312ED7A36A72B435CC6C988B27E97FCDC3B603F737267C8786505DE9629E2F0BD4883BF5A002AB4C925B0276E2AD198103F892E69F29D6B6984482BF81F5670846D213EAE8008FB7CCC5704F8D705F284E23EC13BCD3BF5121682FEB6A69BD84D8A5B43B106235EA5B726126FA66A25EA9754CAD9B4F9B10A3078E4A43DD7462442D2B952BA4E145ECB9BE0FE876F35F5D119BBE82C2F96230561E204DE6E355A05819535BC0ED803254A96E833B2A5284D106BC9C7AE28F578DF163C896A9D081F34858B43AFC38764FB52F5FF496BA3DE42B2557CDAAEDCAF9646D466D6F6C958DC16139748658E36836D2DBEF1C2B301DB7AAFC0BCCDA149157E076E50BB4F33AB7465C7AB1ADE8102DDDD9EEC1FA8C600C33FCA26A14800C1EE28DF2E42F5A41696E448F03C8066134571AAE7FA5FB843E98C3E87248B3D07D84469EE0CEF1B43D94D7A4A129214B6E9D1C00AE2D86AE3031700BE408A4F43CD63F8C32FAE965B6B48102EF0482449DCEFF87EA33B87BF7ABAE27CBA7F61D0C492C49580D8CF61E36ED3601F5783A7E89A488DEB178F2B9EA0A392D134B71311FDCF2914F917B8D579E95D25E274B62B4837BFCDF2E0C0EB3DB966D60BFBF9978DD6B92F8C6C04AFFEC00FF16544ECC2B19DF9E4116A4C12392E7F4853AB7100D7AF646A15E7BBDED7D2AFD5104841E4152EC870A3417ACC2AD94FE7BD701C6545F7B94CDE2A9192D0BAFC0A4F605BD068B07608B5CB69B80B4721BC6D24179BA5AC7873C1E67DC46C12815E06C03C36A597887F840B3968D4FA8A5BC71C97A20F23027B53B4578A8349C3471C00B50D6DF6A5A5EA28AA6053F843B0E04B80C3ECE1B972F8AADFC3808734C634E800D374B1627D63C40BD9FB2143F0F55F15F1379FB890ACBDD0B09FB5AC5494650EA151DCC7DD66A0EC5AB8BE200500FF3325077CAAE686EC287E4CA2543F1D20778132BFE3D577DD7A19688622FE62A30BFAFB0AED872F0A58B4EA709F9C508EF7566B80EB4A2A3FF0B6746DB529C56DA07ABF197A9AAB43B219244F055A12644C37E749E783FA6CD7BA04666B106F0F22178C7677F52041B6A84CFB46EE4CABE03EA68ECF0EB73C1558D0C7FA22A33FA7F1DD378CBDD2D69EE8434718DA604ACC1E3BC6B07D5FE7779BEBB7ADAA6A2D91A15FF2AAC2AEEDA1AEDE8264C3BF06D6D8B87F39E8AB2E68ADB428553DAAA55E04779F87F3F510AB1BF1DE2DF2F0332FB7E021E08F404F07DC457D40EA2426CBA8E7B5DA26F69C74524174CD84B664F322571DE995CDF0399FDDF9226B3668F2CA007EEE3C8E43B3A1EFFE1A391DDE84CA6E33C311046CFAE8722BCA961117A23A6D48F3B07AEA5366F9E2D7E9468215613D7340696025353A9DDB826718B3382BFB67690C1B546176BA34BDB93E28D08425982FA40AE15CC44329FE27C0632E3ED1F9AF141337F3BF5E05A8DB056F674D3DEC6E146BB026AEA07F3429A06C4F1539027C5C8A8829A75F47BEAA664B43108CB0ECB20409D567DED7B578191A7FE9613890DCBB9DEEFFD4F8BAE6B014247DD710F027D5DAD2259C7804129B11467344C2357959225C18C721D3C6B5F1E2828DEC1CE52F83526EC262FD0E3D1C46474119C5E65C477C68644FC5F9B8AA8684340F2D31B7C42E7E403D60A41CBF7183DEC2DD44A797B782F229E419C76BD94EB85D4AE62FA2C39C8BBD9E2134B923BE1407CB3C536278164E8091118B7CEE91098D3150128749FCB5C2B62A4637420D0B978D1B3F41977D5956D02B317B25FC00644B5E2185BE866D07C5CF3017F95C526C08252FD0E27C1D9CD1682034A9F465A56CCA259BEBA3467D7021A57687CA31416609002A0B958903783E93720E52F65C2B5DF7EEA7CABFE783E94CCA72081ADFBEE7915F335AE87A4CE232AF57AB8DBEA7FF03D522FEE08CAA1C8596C68266CB6A552B177720FF1C6EFA3ACF756F941643E2612E8A71E0AA2242A1AA793238CA12513A50245E8DF2BF23A9E8273F0812773349FA2E8FC2E834CAA4EF5C2F1016DDF1046D748B2A6B67557C3696ADDB7CBC6F0E0A7FFA53E72CBF04BF52062AC5492DF22B5CADD7A58AC9A67152D18F6D0FA9E17C8FC549EEFB601EBFEE4D14179452E9E1756B78317C20DDC55232B2F42A2D088A05E9BAF4FDB62B224F71DA59CB5DC9D7FD8A435CAA7BC78BF96B763BE87534B801C455C5EEDCC126DC7AB1A1B8BE9A15754BF1AB39190CA29C702640C5DBD56430CDAE36B7D8ED505559DAB6EEF78F4342E691E7B4BD8B5DE7E8B17A7D6C0949D977F0708DAF620C2254F622490CB3BD015265DF5F18D9533C39F44C3D36015E3E772C6854639CDAB274E09B3B0608D1FB699DA0E6485D30D7FF1FEDB4949845D25B98BC81EC0FD6B3B676C13E9619BCDEA157581D12FE654E70CEE49ABD436D646D9F037E4261108952F0DAFC8C168CFF5736328EE27D865FCAE7D9BB972F4A1462C726EBA6AED78F62DF152ED97E8AD6AFB6E01C073999C7DA709405E0CEF91009015EACAB33D960D50BB76E27308EA1A2D776C42ABE2BB0592A7379779C86D78D9403F4BE658528CC68B710FB26FBFF3188DD57C75C5CE9C096849DC0C497AE85B214F1DD76D490204568A86E9B390D26CDBA2DAE88D012992C0E18190B21BEECCB3DF758B0E318153386B815700B7BD1954198D97EA2B7E788E230A0F2BB9F9D81A327CAB932389127FB4DB6D85387904640269B051189199DC04679BB37A40C36043B1F3C84E8671CE033BFAE30B9736D538F0B94314A18587897F6524ACF6723D09444EE8BAF3781D1D4B8AC5BE5511BC2504EE889C25BB00AC9BC21C184A203036504F0E11147478B4D28CA56748121245B2FFF92E0FB189E4079A8E8DE37A21F082DED2AD50069B0024E010665237601F08846C6185F66E49A46B3DCB05DE71A9F86A7B51421EA2F0961C9D913F5A909BB9121527A3CE23BA565A84175B85A7CA17E1A8623B0EBF9488FBC26D3B623142D6E9DF72ABE0079A980426BDACEB2398F0DFA8137DAAFEDE1EE211EEBDDD4CF8342D315C58262F9B67B20A5E1A575DE570CAD53913C22248205A93F50F0E5EBCE901E9C720AC7D32247C0D939A69DCD8901CDE66209428D7655D7F321B935B309FB61D51B2C633ED3AB283FDFC4959DC30743F2F6F6FD97796B1CF675FDA157D3BF37C617CCD694C02C538BC7B415C24EEA6027DA51F6772C9079108390BB78E0A9155ED1940F076BE8BAC47DDFC216D0B0ACC4C3B530F28F5F192658BD3612585F5AB2976D79EA5C12459FA6C8EE3240476CEA452D24AC9B8869CFBAD16343640A598A071A2CF60FD180E98DE3C67763A7A0C15B5266AF8531CCAE51D265649E14FF52B2DC42A08F6394704111A807CD3430021002F2B259D4117BA2ADFF3D2151EF613B9CC31091EAAA64D645DC5B4BC931C157F79A94A77CB5D3C942AC747C4D880C06E33B7FE857D02D06B8BE7D58BA3CEB7901E3761DC49EFBA43B6E2C0EE09B16A79FE5BFF8F11193480933588F304F749CFED31541A6399425FC21978CBEBDF39AEABDD4B88A6E208B1B32DC8FD4C2693F2DCCC04FBDF27698D34A294A49B1C1E8FBB92D80FED12ED489687F3823CD695AB861BD4A72293E76C42F36C7034A0A8667B59879685DDC1821092A246FA1CD138CF7CB18DEBA6122F8B8022A1E964F4C186BC2690AC9E7909956A18BB5CA4878977A2A7483ED4C2FCDBB019242303DB7A3BCC879DBB8F94A1703481B4A999ECD312C481C100319328F529187F7E5B9001EAEFC923D80B37C3AC41E6A8F6E221695FBABA1EF59D97F8AA0E940BEE2E4DC1197C337E7C1500ED087F690EF355956D69606178106947E661FF647AD8D09315866463583D5BD2390DC375AB4A0DD0FB658F4E271F1D3C37E1CA3BD2D059263D128463CE93E9CC0D26A60CFAB53C098AE47B0663F65BB5408B9EA8911CFF6784897D1C7B6B2B2FA96530581462AEA98F01BD8E48C8E923F94C16FF1247505BD23A5667DEC05AB78F83B3E7D0097F372F5D663620CAA01E2DD8D44F74D7C1D7F9ED8190788CADB928A3E9D575227216AACAC6AEB2836A8E108817CB7EEC70F5F2AEC42D4BA1F4B882FE2AB1137A630409366912B9C12761BF34C24602A8DB9386D53CB781503F9782763A95523D973BEA0B983D307FDCC5802047459833C22706C198FD6CEFD8B1315E44041691D1A5697BFA33A58B458242194C3E2743F442F222F80B7AB03A2E5E71C44EE44594DC0DFBDAAA10E5444585B529BE06F68B21E7A12EE4B73576A365703F618575FD32B7B6BE47E3521048375A0FF14E6E5EFB3AAC8B3881442308517D36D55A6CA30CACC0E3464D2D5EFD67A0EEEA87737375647FCAB4B5338F7E8FA83BD4CF5792F91639B61602B04673D2DD095A3B37A7C9D5D75D5BD91822DF859099F2ECB5FD131C0070CD2D8EE8D70C0C4FB52300BFAC9620CA7010871762E533D119A0BBBAAC07C92A4F42E1DDCEDC459D2C9EF8970E1787BD4A4D9B399A0816ACC8C8D60E8931007DFF7CC3FFA7B884E1B747D6F5883D621E4682AC770972E52B664EFC0F15810FB31890E3CB2850BBCFB6B7773F5B9B33909A2616ED784E93DB14E6CB753BAB8655552CBDD8037516F1E2174D3F1AEC2D18B2B72F141E056247EB9185F7502C09BC2FEA5037F88E1A977538CB544387FFB1A3121D6A53F4E739B5349D02FBE1A89C3F24B24EA74D298973BE3C27155AECD3B7FC909B3F5048A6E0C8B664C8078A26F78F42A366470489BB444B5DB5182C784F2405A65EA90E9EEAEB46D104C61E295566F307F740008F99020D5F1BD97523DDC0EF56E8A73680CAB742ED78CE4DC3600F8D9314A44B202424263195897A50AF243C36D8EE7707DE7D514FDEDC5C4AC6D92A34CE92D3CD24F07D1419320D77780C96FCF49744E7510EEA0D737595D6A0FC71F0647599EDAF7B7A791BDC9EF76A124F486DE476ABD286DF1AA20EDD8A43D2E85E41115B65417A60A0B795AA12897EB72C58CDD22ECA85904C5D749A5E6F7D16B03B1641864D4C0C655D8AA5F2C73AA8BA1D30E377D6379F8B328EBF321262F9621860101E86793465125F7090569908BE1618A9FA8829CA86561F24226FF0639055ABE4DD3723CF3D79EB8ABBCF78F72FA8601D83D78265E819F4596E27166BC4C16B0D583A1FB6E03F02CF001A7AD3EE414324FC412734A374AE7FC9C71843056DE150F977E5F7D5359EE7DD613521280350AA03E6B32BC7E8B517171F832E1AF43F00AAEE2071B0D212E375745348C682D9DD3B4E95FA33CBB5E8914EA6F746D8CBB977C96248D21998680F88012E135194F1522AC571ACE10359CD1A37128BEBD5A0EF57C0762A5094B7CA720E1DA3D4FCD31A997D51DABAE899F3416515639D54A63AD412BA142787170ECE739D329C1F549B2D92CC11690AD32812667E722A02B542857D02112C4FD5B62DD96BAF828F0CEFB1B3440FF35D196884EFB22DE1151987D8C847C4A903F027832BD10590212E2388FC57F59B7245DF2B7F6FD2B12CCCC0857CE462771EDF42CE246FA1C152EDAAD1839B3423B8CEC516A76E0A41393776631053C18FCC1D94D8AF96E89387C780C1DBFF6A37E36D2E154340B2B3564C3A0E6C070C1940BFEEF042F6BEAC5CABC9DAF7CA866360F0FD5C71819D52A64D1DC5624B35A09CEE89D27B65EAE983A7561BC784493A01ADAABAA943108821951908A4E40E07A4A7FCF3E47E6E7B667B214A4431881BFC3D720997B1CCD6F5EEF0E9FF4050E3100916C6B5FB7A661B0A2259CE7315D9B863B36A88F46F36EFA3444B164B3383D4952889A352F2B7BF197B6C76260D9F401E83389E62380ECD199F2302D0B2CBF99AC1EEAB475C9AD29D2B3AA379771A5CB448454B3A09A349CA1E93DFBD1BD915C08498FB54987C6573C2CFC6F453E86B84C35E42E2EFA235E0584621CD39DCCBB002537E2A55D6F2F99DDBD924CC5D434D45477190B9C3787ED0B93BB904EA73089F19847887506801F6E4FB79EF3CA0C88F95CF6BBF2AC8D96B66427689E8AD5DEB15747E1B6FF1B1BBC937B0CE9E58E3697F4210BB894424847028C2210A64221F07ED47C6C7B3CCA938094C2343987CE9B52400F6EA83762FD13A8EDC5FB2280956D69679FE3B78507CD5ABDEC034A2F3F51C3287FC7F5C8642DA600578D8F737486CF10EE13BE0F6E97F831E6A13E71D9FFB74FDDB6B7B3CA45D1951E06D94283F218C7814DA1902CF627616E779FB13E292E9197F07ADC7DB8947312CBDD37D6CD9033D2B653BFB123807123BFE1EE751E23445F398079CBBF945EF88E277D14080A434D477860D835B14DE87BA77E759FDC657252C3AE88F49BD8789638DF4249BE3D09A9894E9C61FEA61F5F1520F8E1FF36AA6C3F273E693D80A57C86FD14337F4B7C8BD4353324F5782977F8FE39749709AEAF603D1EAC1A6D424044BD9F1F301913666983514CB8ABFFF17EC51B9108482C1ED93B6C649004E90F03946D1E81D28AC3E6BE77A5F29F64E12B1B194A41AD0D4C156B3807C671FB05D2951C74130728700635599564D095C27FA8F96AD343ABB9755F1A7FD56FB03EF60ABBFC8114E608569E30092CC406D99A5A45CB1A4ACE5D3F5D279979E0B003FF51CC1C60DD231BB0AD039899896045C0D6D458682EC4850A2CDBC372289D65B1C833A1B2AA70B38A9E0CEB612F26852F302B5A0CF5AA8F9D5C1D8636CD947C2D6B2BA5F829A831A071948EE4FC4E5449A7FCA2038F35DF62264312D7257BADD9F973374A64C178BB1C818A2377C04EF4638D04300DFD77440F5EB2AC013815777192FCABDE25A3B1E07149549AC1B2ADECD3D907CA2DC74B1477B93807D36B84D74B27F05BA5500D7AC4FB9961FC204C797B3E960F581BFA79544B1A2F7D692E16646E6F20069A84BE72B3A48731E2435367E24534F36C7796AA03854FC13CC90D74A9FC881C3D8E85B76FBB10040F0DADEE2394BBBFE6CC689E9AE04EC52C52383F10FA0AE69AD99FFF5A8BA769AF472C7B8587328759DB9558D6C08B6421C1392068A4613B9957B43B92389159CBD03C5A97B645EB2C65BF86138B43E99E1EA79015DEE14B739F60D45D1824C68BCB628AA7E0FD313E851FDAE15E7CB9CE45B806F60665878873428EC1A2987BECABCB3AC647AEDE8648BB914A66096C849F40DC295AB3E7BABCBEBBFCC0B546B2BE8F989755F9F97CD753F24DACE9F1670B8A568F690913F33FD1FF38BB9D5EA78986D7F1C3A3220B5E8D4C496282C14C2E5C1B5925ED3F619E08B403EC7FB690A03DE587E42C3CF5C28AB20791658DEF2CBA6A631D4F9C7DC52FBE1F07A78487E3253780E03CA4D5D8D86318167B7C8002485CB219AD2AC4EA71F2BED025CC5FA58A188114E9B3A3CCE02D0CC6DB856BBFCB3F8126142080F145B1D90C97F8441F875CDF6F1B07DCE7345ADCB79555B497AB3BCE4848CF2CA6CD6F7C8867F77A24395738CA5259F05C94B6BC395C2E3DB1208DC9FEDF8DCDFD840E01FF6BED58C60F8D95694A3F885F7B40E155517AC3D56BE073BBDD207687D50FC5EB991EB98B1F7D239FEE488B43F36CB6FA9EE0DA50D5B98C2CBA24434D17057E817169B19F07DD5F820B5B7F9DD31D5426EACB51012945ACCADF8475BF93C0741FC5BC006F09A1596A8C9992BD55B2B0EAB0CF903B1588F8FFD3E3BEAC50DC650C54675C1A30ECC18F0A0AF696A827387DB2F8CF97187BEDB2BA539F8D51919E01EAC896FAF8E3AA0952AF6454554BB5B37AB687A8DB3AE7E4654EA3E9EEE1CF1750DB526A79BF29368AF76C036EF86C6AF202B382BD3C55A068579C0DE25AB4ABB42A301204A5A92BF8EFA7FD7C33D06912B43A1BD2A7ED057E886BCBE0C607A231A5EF3944DBB9AF501E699D8E5A3DAFA92134270B086E95477C469F25C9DA52D287143F29D36D98F5C38BDA87F5FA808241B2B59B4F6CF80056100C255A03787FF62C023F9A9EC542F90FEBC3F09055F830647317F616551E64F7DE0935F390A71FF210062C179C5ADB7926C9DFB7B4D356C50201E9919F35A9B8A5A6F3E38FD4D00E1A76A0DBD397BAF1DFAD23F20593F5BABF787D3300AB191BB6069B0D5066EEE3DECC47A5110BC958943E3D788B0AFC48C43DFBC24EF249BC7F70414311D52ABA51A3F2426CB16B6F8E141CF15E16F9F56FEAF085BD15B7484EA7F06EAB59BF837D68F08E1ACD03BF83FE7D973B73CC3042DD76BD52004526086D87D16102A32EA37A6CB19848C925FD7BDA521529B407E3770F268EDD89920830B32E6F8D7D056AF1F1535E46A5D287AB515369806A09127355B613D7E6E1CAB3B56B0E1404BF3BDDF1A475033C63478573E82526EF75C3982E4582A3EBB9C04A4DF39913699A38ADC1F3AD20BFFA3B99B8946EFFB2F7AA36B37DFFD220CA8C0A8280433279C83EAE56A833848CB1E31FF8E9731729A5FAE862B731192153C5D0CFBD7570E6AB5CC9A87E1661E5D9F0B28456073DA7E92FD83063B44421590A90BC55280053D8FBB42024E29DDF1C503925BADB7EF58093DCFD1CC4E5F0179DFF1AB20C6597EBEAA35B5A33C3B1EEF8DFD0E83D8BB07C0D4F185AC3338C94E90D1F454C332522A3F7D4C595A472CB7F47BF36E281ADE2B9C12DB02E45E76E9D1AFDAD98582C241F7CD927956F8D2C14BF9BE64AF8DCCBB819E5F229F69BDE3FE57A1396DFEF6BE539DE028F7F327DF7681BFE661E35290B147C534DCD9C3D54C33DB9514110DE68DE64B2D629C0FB14E3D248FDBC8A7D57E04E76D006B83917EE7058BBBF461704C54823CF645F78E54EEDAB52F936412A22BC1FE16EE3DD52AC3C11E4FDC6183FDEA8A97CBD56D34F9FA2FA67D03692B54D4717E98C99178860726A441D878051B169B72B9EFE2FD611077D45364F6F674707FD84317DE2525EA758310A304A173F2260A1C9F883597EDD29EBA0758E1A34A4ACF827839A7DA2D70255E4FF0E771A819D6A2528D675159E010AD929C439B03628C96847AC9F606F7133A17E89ED9698D636F1F705BE826D87ECB5EE79F7CF5B5173AB338425524AD26DBECBF4B27359560D8AD37DB6CA3536B302A0F46FE5BF306D14F4C556A1794B6F3A8F0D378756E9DF12BD9F68121E196160A67AC96EB5052480D7F1783EAAB8031B740FB0258F43C30E862126930E8AA5B3D0652F97869808B42D59D88BEBDC7621C055BA1C654B3DA659636D3EBF8F02CE735D706920D6FFE9299D4A59C5984B6780F1A1FA5FE7ECEC7ABF7737E99E4A25860C624E2051317F09F5AA06B4AE4A5AD495FD4F28C5E51A8C15754B7951BBD2841182C669FC040E03313AC39023B21F13AD8F568D9EF2685D387DDBFCB4CBEB2E62194E4B5CFA356B81A4FDE36818E7BD9059C8AAB14C819BD8E12E47B4482193961D5A402670E20729378636F1B7A45886723886DDAF48187869E9EB8BE52C5D6EC10DC961C67DA49B2285C5E4CD2A6327383A7E09EAD7354CF5EBBC02BED20599C978CB7E0391B6B635499CC62F9FEC29F256B4148FE41C2B302005D30607DFA6637F2BD55087576BFFA7C91F45A9F9F33B839AA0F5305F754ED46C53E1551B62ABF99CF016656AC4DFECF6BD07A0D1141CA118FB0DF01B5566897B00583EEBFB71AA3B1E521E4B97050D3AD98B3FFB814E9E5F7576372FB17E22700E5CADE96F373C416698FC6E1C57AFFAC1D67B6FCF788D25E4C842E1DFAD1540B97B1EE6DAFBD0022FE10D834F3F004B2B471C19322D1CCB52A674D3DA96675FDBCA7BA63BCEA36BB3811D8899A56D6E519BDC2549ABB595C0313BE1AF0E0F91F1A6C45F9211D620152650634A2EC4C3C23B2FD15339CF0DCF6701E8D027C5F8272E167050BA041EDB25B70A6814AFB554DDE83974CBEDE50E17A0226ADEA34394D1856294F70ADA8494224DDCE06AA1E1542D4C3980379B98CD4BA149A5BAF0801975E3BA25FC062F633940F369DAD774AEC77B224BEEED6ACFAB0DB7C0FC8A596E70E4297AA27A80717BDBECD8C167CCB93AEC54D2F16AF8B4FCCB245D10E92276D53EA137E0F46BF7E3F2BCDF91BC6EF97A696417DAD07ACFB7616DF36D485B2C1549D6ED85FFA24EC96A4DE3D0B1351CDC979DCC5C606776D9720546D697413E8A22A6504B5F0C54F2619C25D7126CAF39EB39F864409D378D4A5D2F79EC710BC27CAEF9CE4DA3EFD4EEEDEEAD693A42BE458DED48A5CFA2DBFA7D674D2F8BFFC68830ABF7B4D67119CD88F228CB4E8F05AC8E6828D1AB7C225674FDB4F2BE23864FFBFF018932917D9FDF278B82F4C7871F17B407224F09E62ECB89667170D6E949C9EC8F0D3B3BE4C2F9B771F6D0F775A78C982482761C1FF9E3583B38BB85E82307DC3595265C34D897A978917A0721E4421B4C27F9A9D6DCA2D6AFD1A0DD9E84D9FBAE421FD2E0A7CA06697D37C2A04F5DBBAF4E598DA77260D4B86216CBDD904F4FA27FE4F74167B3851EC56454C65504CAA8CB067326E2319D0FF7FD8B8EB8727F3E979F2D9A233330DD5660492A1E42EF8D50C40BC3333CF1AA53ACE37637A3BFCEFDE42562E220575290D29DCFD90CBA1E52EA9332D666B722348633FD63626CF83FD980E583A20DFC58D3E6FC248AD29EE2AABE2FF3C0C23EE95B9FD1D98557A57B3B1923A6EF7C5F198D92EB4EEB047108EC982766CBC960C7FEB41703AE39FDABEB43AD3911381AD4C41161EAD16E4CA3EC981093961719D3FE441F70736744FF28EDE0C70518AD0371C1575A59A8016681E9FE44D2D916D1EB4CB824D51FDC95D685737C31A7D5F2F085DA021269DA76120F34BB6BA234DD0A068661631B5FE490CD33990CAEDF4B9EB7A97B954C9AB797C1B9FEA96039FB3299F46636C3F32601B636A97DC70B49BAA6C034B170586DC4C63D4662C97B4C9225719199EF0D70A1DD7287E5AEE7AFA282AB1465BDAFCE91C6C4D8416ACBAA1E0FA6264E82BD953E4D7BC42CB68482493E1B6896AD0AADF1F7F911DC66089311D787F6E988F515FB09C119159D6CFAF0993B5CC20902CBA12A3FE0F21B0736DE1E563FDFD73F5CDACA28E9C18D8D08B8AE3B5B8DD9D227AC28A599FEEAECA99BC7F9A63789F00C53E08636E5AECE57146653471DF8DAE0003E31E52C7628CAFF48B9B1A2C2D14AA7745B1173FEF987900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%!FontType3-1.0: FXTHMI+WenYue-GuDianMingChaoTi-NC-W519 dict dup begin/FontType 3 def/FontMatrix matrix def/FontBBox {0 0 0 0} readonly def/PaintType 0 def/StrokeWidth 0 def/BuildGlyph{save 3 1 roll1 index dupbegin/ShowProc get 3 1 roll1 index /CharProcs get exch get exec7 -1 roll execendrestore} bind def/BuildChar{1 index /Encoding get exch get1 index /BuildGlyph get exec} bind def/$SP{3 -1 roll dup /SetupSubFont get execdup setfontexch 0 0 2 index stringwidth} bind def/$SPW{4 -1 roll dup /SetupSubFont get execdup setfont3 1 roll 0 0 0 4 2 roll} bind def/$SPTW{5 -1 roll dup /SetupSubFont get execdup setfont4 1 roll neg  0 3 -1 roll 0} bind def/$RP{6 -1 roll dup /SetupSubFont get execdup setfont 5 1 rolltranslate -90 rotate 0 0 0 4 2 roll} bind def/SetupSubFont{dup /PaintType get 1 index /StrokeWidth get3 -1 roll /$SubFontArray get 4 1 roll3 index 3 index getdup /PaintType known{dup /PaintType get}{0}ifelse1 index /StrokeWidth known{1 index /StrokeWidth get}{0}ifelse3 index ne exch 4 index ne or{dup length 2 add dict begin{1 index /FID eq {pop pop}{def}ifelse}forall/StrokeWidth exch def/PaintType exch defcurrentdict enddup /CIDFontName known{/Anonymous exch /CIDFont defineresource}{/Anonymous exch definefont}ifelsedup 4 1 roll put}{ pop pop pop get}ifelse} bind def/ShowProc{systemdict /rectfill known{0 setcachelimit}if6 -1 roll dup /FontMatrix get exch /FontBBox get aload pop4 index transform 4 2 roll5 -1 roll transform 4 2 rollsetcachedevicemoveto dup type /stringtype eq {show}{glyphshow} ifelse} bind def/FontInfo 4 dict dup begin/Registry (Adobe/) def/Ordering (Identity/) def/Supplement 0 defend readonly def/FontName /FXTHMI+WenYue-GuDianMingChaoTi-NC-W5 def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /cid3614 putdup 34 /cid1581 putdup 35 /cid2155 putdup 36 /cid2707 putdup 37 /cid1826 putreadonly def/$SubFontArray [/AAAAAB+WenYue-GuDianMingChaoTi-NC-W5 findfont /AAAAAC+WenYue-GuDianMingChaoTi-NC-W5 findfont ] def/CharProcs 7 dictdup /cid0 {(\000) 0 $SP} 2 index /.notdef 2 index put putdup /cid1581 {(\000) 1 $SP} putdup /cid1826 {(\001) 1 $SP} putdup /cid2155 {(\002) 1 $SP} putdup /cid2707 {(\003) 1 $SP} putdup /cid3614 {(\004) 1 $SP} put def end dup /FontName get exch definefont pop%RBIEndFontSubset
/FXTHMI+WenYue-GuDianMingChaoTi-NC-W5 cguidfix
/F1.1/FXTHMI+WenYue-GuDianMingChaoTi-NC-W5 renmfont
%RBIBeginFontSubset: KGMIUF+CharlemagneStd-Bold
%!FontType1-1.0: KGMIUF+CharlemagneStd-Bold 002.000%%CreationDate: 4/20/18% Copyright 2018 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (002.000) readonly def/FullName (Charlemagne Std Bold) readonly def/FamilyName (Charlemagne Std) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition -75 def/UnderlineThickness 50 defend readonly def/FontName /KGMIUF+CharlemagneStd-Bold def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /P putdup 34 /H putreadonly def/FontBBox {-103 -262 1217 927} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BECF50FFE512845399614C272AB8E43001EA9464E9B6261B6B930739AE6EE169FD4BA43AD294289FB6809F39D57F1AA69F9E1D12B1DFA4C09A44CB940852E357A872A6E5A0DA1AAEBC9552EE9C0CD64400B8B35412D1C217FCB6AA114C7A852242001ABE1E70968EE5D983D3490FCE68E7095DB6F0D68C422A56D2A4D24984147F7DDBF01EE9E950AEAB261F37A9B1D105BF7EC422C20C7C99C3BB9979D0463860D90000DA63D9D036580FFBEFF73A37D9612F9ACCD111BD0DCD21CD6BD32C34E33D1545C1FAE603E0B8B8271FF232165C5037083540F7557065D1FBB17F876C02DD223D8C2FEC7DE90D1B64F7C548352DC1C4A74609AFB59A56592418C39F39272F61BB4AE953FAD328090F3583134B2A9C432C61905571790B7EC18D6F8765E0515501F673FA14820A6B807168F58A5D1527B8BF57D83FDE373A9346437BFBF440F6BC76C0A911EADFDC237FE5DA16089AC6B96CF4F1373B6E1E3A79983A87C947D3AB90215C1C58991033638D728736025404B7F698F8D2193C7DF86FCBF769C9D476FC9E70025D40D8F2472770B05254C6D151EB54A32043FC7A620CC733C0EF801C2C1B54313839BC256DB3F2B138D35A3EC834414DE5BFDA188862F3D3BBE2C6A013AB7D8A8CE7F5CFD6CD8413ABF550D52C2DF3910688C32480F2C25D1092E31E1A2005AA6388F5375C43D9FC62CC84FE0B8511BDB281C4E26738A8FE46E6652B025A20079010E850D318D700DFCC08C135E1ADC9DF04EBC474FB901EDF17386268089F28C771F3B66368F4AB6A84473DFA1917D4E4A9CAE56D3C7C5E9BA5430BF5B4078D08B8E35AF8E9CBF076AA02323B217BC29903548448CA5E756A819D107C95BD67B771E742DC7E4366DD8418D4419213B52B6AA73DED2F515C86A2EF11FC27817C4437E47A1A06C83D5AF4E6A674EAAE2D58AB3D82125CC93FE3E62A8510B1922031DF63EB44DD32719E62AFF1D17D0E3EB6123421669D612DDD697ADCC0160D7B069213ACFDE77454189F8CAF0CE721E10729D97DD3695BA05B9D03EF0BACC17BC41976F58840BF95F4AE666E6C9CDC8D5851AC7F1FC9EF563EA0CBFE4EC4964E05BBBDC8139F744BADC0224470113B7A2BC0689CB04015795FA956616CBC4496B8756DC04192E558B72618AFF5CB16B4BABB1D34AC7CCA2ED7322F84F8BCA065D4F06CCCA63DFDBBA6EE7C2D017151F6DD3D194402D227E18B91CF699C23E444E972198CDE80D13C3B1A6B3B3F3B2FC22DCF2A709D8382FB43FC15600AE2FE53B0BBDD4EFAD73D9B58EFB2116371BADA9DF2A26CE0B356B4B35F3B9AC1FBC05293A7B77A4A55BD3C91BBD623EAE73DBC3A57E580BA41F648D391C03BDC53BD432AF77EA561198BAE43E386771C294BB0A53AF054A8AD17E782C5AF07921B635CAE7332483AE34F09EC5F7AC190B47BAF542BFA2EF9018CC614213518DA782A2A1DE2CC4FD583EA3423381BA5A69F90D71E886ED257C1BA58BCD254DF77A449BFD6589666BE9E5599B8E607D68F1A82FC4A4729AA59657D0705D9E7CAF4DB4961448029CE694DD8AA24ABA5DCEFF04EBC1CF6891F8826187BF2CBADAC733C6A05C4CEA66414A9729375B3F72DAB88C157309C2C6AD1069C1A18E38BDFF7425072583CE638C5A7C020CDCC42D75E30806B6453F40141FF2A432BCC821AEA0523B9F91B3B86D80A78C1D9CE81238315700010979A5EA384FA762330FBB18A8F91204A23D9C07A66661CD6AE6E2F8775411B7CB1512ECED8D89FA67A59750A15F761D8F50C03BB07B5CC86EEEA799CF4670693C086BF579DD72987FB3FCE0F114184C986C981A52C19C23D7827DA4A28561B1752AC01679D8E61E889A0A994C0494878F31017239253C2125EE557F2AC90721C36DFCAA014CEBE72428D002EB61C71E887A6E76EBC6B096664AF84D8BAFC566B3F57B8CA8B70BD00A3AA948F0B2E17194985459D4D30372711CEBAC8CAA271E5AE663E831BE648BB30ED5570BC27B8BA1AA9EA69A8AD6EBA90BB0924809AC8D5D5D94084CFA0D5B29004BE342FABAD5F1E4698436ACB56CEF34FB8492BD3033BAA3BDB2EE6D89410D5A986F23AEA65DCB94732730AA3497FE5461513563E523486F462F12EA0CE07459CE1BDC905A443EF7A817C3BCA20B7E464156695E5E1F2FF316D2B4ECE5DB730D810F65745856F34F4996E470FEE1AD2A06CAC6521F7400AC7250AFD9B5D6C3A26A764D21864AD12CE7871125A5766EB30F0408118747FA3CBCE1D723824106591B5285B0E1B3B136612C87F8B069D77375D050B6625838CEB4455CD3DD3965AE44DB4681A515DC7BE15BBEECAAFD563A716B47F1DF3457CAEC21AE996D4D947C8ABD60AE3A58F78B506557BCF5B14E0605F8AE15DCFC2CFA5ABCBC8C8D127F5BECC31DAF10B50B48291C75ECA208D4D9B6EDD3B0786CC8070045DDA3CC0D2E810801DA08954ECEFC0F45FFE3758736EC5C2B2A283BF8892AD3BB57A40960BDC1F0CE1CBF55FD67842D411E6337E7C3B0B89EFD105561BDC1771E70F65422B8B7680839D154728FB133E37AD33EC746C35E41013B6255D2B239D0D08F9B952AA51C583DD385D0A053F389DB0FE81589B8CE5EB88EB1878500887F151A286A9B6F90CB34AD434BDA7DEE3BCF573EAC3775C6AAED11CBE0256A542910686A2F2E52E10ED4F24E683C5A512F8495506DC204AC8B2402458B81D5D29D07D3EACAFD49E34F40498C2ED6B7173A71DBE65DFE16E8805292BDB2867DA0B7F1B484E68EA7514C39B6DEC0EBD9ABBA963CBEF6A419B66E15EFEBD0094E73E8E888C0F0D59F91D2A3F501665610E1CDE3915BD4630BF0226DF87AE0EA0657D5FECA6BBA5C041F0AADF863F8272235FBA3A50FFEB1D69D6B9D39BBD157D29C80138841C61B8B19721C1671D3891C1E26F19853624BF2C1AF7FA058CC9C479F88D5741A483C8C4223BB2E7B101BF0E3DC3CFF14A436B814B6CEAA4089D5B8D7C042CD70EE173BC6D3B04FEAAF0D880433A1C8351FE5B21D445A104C0E54CE1AC5EAF5BA132799E07C006426E155136515B6CD71C4938BCB8902EA02EBF165B0245AD82CC92A0A6B5E5748CC94FC1B922424A0DF94E0E8D9CEE38A5C2BAFE0BF3D2172FE525E9171067D7FEF761E57F11B32CF588CDB354C0279AFAC2013A85855DF1A44AEF69C1A24DE2BC3BBBB3670501BC936BC078CB18EEE22C3CD1E027CA9598F34180D0EC79668D55E2E21BC49CAE4CC4FB566ED8A45B5013D569AAD1EDAA22AFF1BA85B137F9A2AA18B97B25C82B6FB291BE097B5008D850C5BBB72C6C370DCF21516567A9CDA9143F96AD47C27E955925B1E75418FE6C1E16BC4E69F7EFAB4C9489A838E9058AA9240FAB880C5A2F089658478978822E92C144E0CE8302D88B2D9021D13C2AB9A81CED95588C362C7FDC3D05831FAE39F66DB19A17B522F2A61C2B49FBD7742A8557CB5CA2E53A7D3A7C063629DC3F83CE9B54DAC0CC29158A68E7BFB03BD3EAB48C06EDCB70F30BBEF7AA82237B05878C9186CF19C561A8C32C772192335FB0726B45D63C30F59219A5E3FFFDBDFC2A7EC51746FF4130815CF29E2096EC060B19D142DF53E0B0D30440EAD25727225EFC8F1C72549420E3A5EC394454BC52A9B886525260333A07A618804C5462FD2EC66A8F49101718B74445E8380B382F1ED65A6C1FC0F4213388C1DC1CA1000D986A05749A1BC67D9855E145FA58B9E47D7057C7AAFFDB83F3F6CA7593CF25E5F4A9A47416B6996FE19749CD7842B30EB5AA89C22E80678E64AF1E4711301EC2EC453011D650EA0DC98C50F7BED3B62AE256493F9C12C13964FEF340A56FC5DAB8F2FB828779AA5D600F6F2485FCC3F7D133E84305BD1B8D4973F388EFF2E8774A2E0F66305C0FB86971DF33DB6A60F3C34A6DC1D921F64EBAF2E991750F448ADC5AEDF852AD05FC9077CC5FFD678FC2BF8EE69E8EEDD3B6EB460B9FD29B386A44D144687C3E2A6562A10DFB0985F60F4C3DAB9D432BBBF3D507EC831CB831E3BB9598CE59C897040DB2EB8840CB56C96042D16E434EB2F53397901E22011581ABA50F22BC693386C123E052A37B9F45B5A1D2D942C402474C6CB88842DC8F517E0B162EF9B46C3DF33C7D47F7E5D4A722E753BF1FBB21584067DA1149BE4466103BA537647303B3D06CCF89A08F89136FC38A5A92A17488848F07AC0FA012DF29E3F0A7D310DB7B5B743E894158EFF5CD9AE5EAD02B60409152AFAFB65F0C0AFD583919D2B093F28AED1712D8A9EE9EE481933C88C6CEAB2ACE8DD464BE50E99E8B324C570B7C5638814C18713C2DC259CEB06799D61EA5C8E6638E8D4EC3D1AB060F20D22D5CF453A479533F7F843B91ADF5A20665D53CD1AD7F91DE11E31C64312909CC8F994480D49B79C5FC8533F9C1B4A553876E56EBA5077E376230FA1048ED89F8EA6581F53B54FD79D642A8587A179E8E7D88CC71AA0682307EC70DB1024F859DC6F2793E33589CF3424796935546627A7770C836546CBE10AB7B4504D4855228C8605BCC281D4DC5ACD3C15B0ADF80276750A6DC75F26B1BA566A8BA9B97CA8A1AD14C986CE0EE26A6A678CFFC75084CDB9477C584D0EB560E9BA8AB83BF67D921267E15607400FFDA0B680713C9FBE38201E5003FACF56B8FAD7825EE276041671396BFDB9A0E869CE2535712CD77C6ECC3C7A42570FDBA0E841A6B6A196317E62BD12EBF7E52A69829C4F4F1A72428E60F40CBC569236B812474E1F442BA95BCCDD65BD574AF455097FB6FCDAA040AF32C3113FAC51BD98FE0B61657E1CAD0CE9F09039B30D4F18C6A6230F8F94B7163FCD7C60EE896B35E707035AC61281FAF4500F8C0F326433BB6A30C5921957ACA85D6B5B863F4905EB2471F16C64A8513B718E347746FF1B0345A1383959ED685AF707CAE105725857A44F20D41CD2FAAD50E4BD4A4410D79386C436E170597F7B1AD1500308303BF8ECEBAF862AA79A5924D96275B0DB0FB1614BC17CF263A31E3C99B189DCF680858DA99588CA86094EC4BFF1B7B455DAD94EF289A1390F19A3EA2127CE8F977E42570BF2480BE0B1F4CC2DD986B34890B8D47374D844B8386F4B97AF9F9E0A8842A37B5B8F680CB2A067F810412B21C3910F8F2EA94397AA54E649DAAE4D47E866377C136BB3F53416141658708CA496F2F024D9352934E019714B78A2E23D57A523E8FD331F747C94411CC014CB57713D72725322CEC5CF8E1A56C517EB32E661B4E9AE4B9CECE06C52D7E065257AA690C7E3D32775DE16DD8BC90A91381374D97DE7138AB0810D02C5C07A23E950613333678457BF7A22ECA1BBB454ABB2C52DE2C56CB46709C634FE334A665F31250C00EAE5F16491797C65CA45A30BD750AEECCC29C1A34224FD26F84E85AC53447BC65FFDF0D59977FC0DA271E7BBA1E0DE9F99690224FA3D86D3273EF80982C95CBC175DE8D5EC5AFD0249BE5241F415AE67D06528D93765819149CAB2AF6A65621A954D383894A1CB2CD4BC087EFD04D7BCD8125E9DF2A9A72FEB8D255FA1BCED2BD2768ACE7FD07A72B269409D1C489051E4594B10098532421CF2F2E2ED8F0FF009AECDDDDC65FF1CD5830C7E3C5B843D39CF1AC1FBF6A38CFDD0B60376DE3A8579B57FF9E8A5502CC76104AE7EAB0C52A2FCCEE70C7D22836F6CEBEE91B74007E6BFE2A14D6451460673AE87CE4160FF241D1153F7FB87F272B25C479D290F24570BBDC6E82EACAD1C5D182E6F61B2E1F78D4BE2D37CED5C73D78CB3B9421C972578DE75B9732AA2B2CF385A685EBBDB476EB3EA0280689D64CACAA2A503660FE30B3B7F95315BB860E0AA8DB3C00A2FA4E8E6DEBFDB3114A2033F40B2DAF7C1A97526C3C809C8482C6276163187782181CF20C1D8F190D33C13E130FBEFB28DB561E0B6DFD8DB2AD24CE798EFAE45C9F8127BBD8C46390F6632F37E8D28D934F181C4AC001B47E1280D6BED65289B7236DAAE4E9C16C012D6140E82240C14C4F1742B3DA26586A3194F4A8FB83F3CF3DBC0A54C2DFFA1AE76C9C3AB83DE35BC405BD1DC77451EC64A11CA6CD343045F07174199ADB3BD45B9732A1C9A877818D18C07F066266FF692626C1C432563A9E0CAE5F658ABCE5C268E0A9A3BFC65C179CC55B7D951D4CF23E7B88C740307F485FB797AA20838260F2F7846FE1263F9554C692E4D3071408A050ACADF34DBB41E4E85FF8C7F357FC9D805D0C877AA2B1001248D5A7C5889C4DB12DDD1DBD1CD140898410CD72CF1EF504BDA66926BE35BA35951E5A0F5B30BDA45E352AAA60D3DB547BF5CEBDE4F564DA570C0CCBF534FB8BCF95E6201441F86C61B6CD5157D22C08A26246B229CCA309E992610E40638978CD79E4E2356F7EA8539815BF0ACF3E12C6728418039CE98168D493407E3E333313A783CFE89856B6615F5FF2D9369C12E4CCEABDB7190968BBD5574ACB8996E96B23F0012AF88C630D64EB265ED58B3274355CF7BAFDD4667D80020B9F9E9E83F021B843EEE2424EFCC534C4ACF83D498BB7523E0F2DA4490EBC4256A6A4E9C7CC6138017B3B3FDB8DA4724A8C0969ABC3B2A70FD0614CB4FC818AE8B230EF19DF1210EBE804C720525CA02AADD2A8FC3178D54EE40D47CC6D7E12BD95D300E1027E444151CFBAABB58F2EC70910A2D795B0AB9C224CB1DCCBCBBB761C9C3F496C1C62B5572D5716954BF3B40DDF865A9C4439A3ECF8F98ADA3F403CB50FED018773A457372A2B84AFE3EE8963833F9603315FAA6CB6C3E20161D9A1071462155ABFFFC5C185C3631CCDFCC0F583DA882108409FC111407AC8CD44852237BA0A648E2402DF016EFCF2D96C6B44D240AC1B575E4AE3FE5C65100167EC146DE52DF91F59717B3756A0D7F06A47F6C9AEC9472EAC80D71948A4B5060F46B12F3407BE236711DC026537A165B6D771B4259FD3D114434E92FCE4E7F80D2372136186F955F2F86EF7E5EBB0CEF3982B404D1089B4D4A23BA27637DE7F3AEBD59ACFB058C4833A4A62A9125B89453DFB9A45D3903E4A1C77CABC596072201A4BEF4399299A59BF6D60E3E3E270CCB99FB69CA1EB60ED6F1738AE9C81049CC8B802B4DF59DD6FF95E9C99778FFB8E98A04A427272686DFD3569FDEC741165F72BA9D45964C494A687650B9A1FDF0E3E9152BDAB296ED615470799789B9C48A4EBA0362C815AF0B519A239179CACFA59ACD43B1295D4D4BA8684630AA19807C4CF80C7F0A68E716BD7A3AE945B983CADAAE19384C50159147489045175992499FA25644A9B60B0EE60190056B220DEF07D54D52F589E01E359E109850D5B84AA6BA8ECC8F996AA8D8DB2B50E3A5C5C328B81EF2911B4472701A844C0437AA37D22232F281AA642E48A41A7696F331D8C734624A0675677F2C211347504F16AF2C36253818F5907B488AFFC433E9652C2C8C4C571A304DF6399B75CBE3CFCC76F59004CBA5631856C5BB26832FB9F1226C7F9BA5DF2F8CC5424DE473A6F1053F9A06F017F332A8663FCBBE1B9BED08773C7C47A17C6F6ED9E97D3A9D68FBBF22ABE468F682D3AEF3E2A8383DAE2DE777D24C8997F11B90C06D390886922B9CE92FF3BBF46A03AD1EAA6E31E27188D7DF79C7B5DD9D6CED3FA69E0DB7064CBD1BACF507823BCE56587ACF863C07E3516BAA378E6257F10191ED78A61A954931A13C30679636E3C6250FED19C1436E0972C285A22D1157553680DBD2B9A0EE788DD1DD04A969D3712D5270C1122C781FC608AA4B33A23C6E75A9EB981C8FBCB98EFD26A50A92D3AD052C18C847B56251939D4E4BCF2AFD55128B88306D11FD58BE19EF2BCA949B05287689E665955BC5F4C4C48791718744FA6671823BAC713B776A4DCED3C17A18CC18838E0C548CB12C58D37F6DB3A64272381B6655BC9E031AC71FEEB2DD97447886FE244E645D238300C1A0CE89167824952C39CFEAED6935F88625620CE2D7C645FBFA0CDAFEC0C5ED2562852B0EAD2A6F8E1C242CA32AC1097FCE3441272100C55B5D5AC11FD3A8A7B4C454B4ABA9CD758E78B4FF7E390F83F502D49F81EDCA357C14637D2871B00A488CDAEAC6DB7D3BD4013B609FAC8FC19AD804936315D9AB1241C3C7EB988C621672574200F868C475E42CE73A1794C1B56EE55E8694F9C7809658442E0D3A6F6A2B74F4D65E9C6CA943CE2044060D61CAFFCF6D06F0A79F88A0A5516C839834B14C99E7C29330C300086ABD0F4F414DE8B267AA261C62C5F3370C9D15A94467CD9B017BAA782FCD8F198E0C1624F12DE396C7C5897D5F06D52D9E86A68042169F4EC39839F3510C37DB008CFB33F3A55D87D33129ECE0FB608EFEF537F6032124EC324E9550DB3CD1679A7C00CDA483B0D0C42F98CF89B04339ED35BA7A86B63EC25BF14730E1F7FCBDA60E3A61A5A0CA7C95A21B59694840F669458F9841290F34FCB13FAA64587986075429C650E521343CFCF68C8E0BC6D9472D7A69DD533140806A0962CA23602FF7660FA56FD821323427A1795551E25F96966B19269FAF1CFE16FA6CBA4CA5AE7C3350F6A15F0A16469A4BA76ABC4361F10AB661130DA48983A78DE9770ADCC3D99FE08F3F89F57C94F472394E324929B0F00F594E01949C31D0717285CBCCAE15DF707C687F9932AD16DB7981A1F1BA159BA8F7C976FE0081CC9F8E44099CCF846494A893A210CC0773BB0A7A75B2D8F8A797DE188B2EA75F4AFD3012A400B1E5345744ADEC7A8A6BC1910BB78AA9B3034F63E69907B25E17366AF217481DCF93C286E616F8FDBE9C387368387AB4B852FDCE152680BC8223B359DA5A50F0204E2F154E07B86C181F2A61BC384A6DACF2029E32BC16083E7E379EF3682A5E93E7A66E342C297AB2F6B3FC00157D429CA5D4DBF3E74D360028877B0FCC8E0F64F73C4583869DCC2676799B2D7C9C9F66D47528BE7873363B1F88A748CCA7C8E085CA6E1EA07498DD6B050054527D7FBDDFA5E3AB850B4C04006DC2728CC48723AF34D2341341261E8EFD5F1155755B446ED76928A466C71C813D3B2F4C11788DA4F724082FAE50854F7733872F519CC1487DDF3DC1F0C34ACF2E9FC7A24FA1CEAEDCF77227B8F73FA14DB3401E7FEB738563CE4EE8E635F58320BF69E42674418C5796C18DC34A2A42BBD50643F5AB224C16AE36422011F49337AC26BBB0E45C2E786E103F786D0C355E64F8A5B3828A0D21AEDC393E8FBDB36B682B9A4A8E6C7D608642EEF82B4C44A5DFCD806777EAA493512BA905F66E0B53B5D908B1D10E8B7744EA9E5EA4A55EF6F0FABEA175B5B59E56B0C2EADA642C6CF40518D87C2A62B5FDA281EE839384CC41BE2F874319F114A6BC33389E3C408076FFA63DF6536E063908DC3D169C394650490DEE8265C0A293EC5C6D804465197F44BE056BB04E41859D73B496CF8C04E25C403A3243FFB93CFFA25741A189C803FE84B17DD08AE4B23FD6D3EAA0D1883D0C8C8530C89F1BF5D6AE385D884AC9B68B777D8CBA3DE6156078B7F08BC22FB36141FBEB826A68BD6C1585CDD1F87B1FC3D8E015D98124A8E6996EFE4436EE6746366106CDF686462D56923F3947F30C32829921F228B6A6B41299E85A676CBB6A925779D0195AE98EFC28853B64C3BD32AC4B706680EE8EBD711938973B596D9E971059CDB458576F4AAA8D48AB7DD11E95088E38CF2C939B72C21AB865DAB4503A563A1DDFBB90D410197D46A3670EB7A8E03B9DF3A108F15AE5C994E2EBC8DF74518D758E25FBD019A846BF162E00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%RBIEndFontSubset
/KGMIUF+CharlemagneStd-Bold cguidfix
/F2.1/KGMIUF+CharlemagneStd-Bold renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
0 0 0 sc
0.60000002 i
q
0 0 353 174 rc
1 0 0 -1 -4 80 cm
/F1.1[ 72 0 0 -72 0 0]sf
0.5 72 m
(!"#$%)[ 72.000000 72.000000 72.000000 72.000000 0.000000 ] xS
1 0 0 -1 -1 134 cm
/F2.1[ 72 0 0 -72 0 0]sf
0.108 51 m
(!"!)[ 46.008000 69.768000 0.000000 ] xS
Q
q
294.46072 149.67099 m
295.7305 149.67099 296.75986 150.70705 296.75986 151.98509 c
296.75986 153.26315 295.7305 154.29921 294.46072 154.29921 c
293.19098 154.29921 292.16162 153.26315 292.16162 151.98509 c
292.16162 150.70705 293.19098 149.67099 294.46072 149.67099 c
h
W
0 0 353 174 rc
287.16162 159.29921 m
301.75986 159.29921 l
301.75986 144.67099 l
287.16162 144.67099 l
h
f
Q
q
310.17136 101.96947 m
311.95715 106.30406 313.20801 110.84275 313.89594 115.48387 c
317.63397 114.83005 321.41473 114.45364 325.20758 114.35767 c
325.20758 114.35767 l
326.05411 114.35767 326.74033 115.04838 326.74033 115.90041 c
326.74033 116.75244 326.05411 117.44315 325.20758 117.44315 c
321.50699 117.53052 317.81808 117.89665 314.17184 118.5385 c
314.26379 119.58755 314.34042 120.63662 314.37109 121.62398 c
316.04465 121.36208 317.73547 121.228 319.42914 121.22286 c
321.49619 121.19878 323.55743 121.44774 325.56012 121.96338 c
326.10565 122.0913 326.53839 122.50856 326.68878 123.05164 c
326.8392 123.59472 326.68329 124.17713 326.2822 124.57065 c
325.88107 124.96416 325.29861 125.10611 324.76309 124.94086 c
321.36243 124.1785 317.84439 124.11031 314.41708 124.74031 c
314.30978 145.04277 304.17834 161.65808 300.14722 167.55135 c
297.44958 171.4082 285.18762 171.19221 281.03391 170.99165 c
278.01709 172.26852 274.78754 172.95947 271.51556 173.02808 c
264.09708 173.39833 254.48676 172.62697 249.71992 167.10396 c
220.73573 167.10396 l
214.02467 167.16742 207.39995 165.57857 201.43848 162.47574 c
197.33165 160.35083 193.78151 157.27969 191.07712 153.51241 c
189.14299 153.58502 187.24646 152.96147 185.72784 151.75369 c
181.54346 148.54478 179.35162 141.50989 179.21368 130.80328 c
179.21368 129.95125 179.89992 129.26054 180.74643 129.26054 c
180.74643 129.26054 l
181.59294 129.26054 182.27917 129.95125 182.27917 130.80328 c
182.49376 142.74408 185.20671 147.43402 187.50583 149.31616 c
187.96805 149.68796 188.48521 149.98468 189.03857 150.19553 c
188.22701 148.4964 187.62477 146.70381 187.24527 144.85764 c
185.32933 135.4315 187.092 129.26054 189.26849 125.41911 c
186.43291 82.793205 l
186.40311 82.365685 186.55133 81.944939 186.84207 81.631821 c
187.13281 81.318703 187.53986 81.141426 187.96565 81.142479 c
225.60986 81.142479 l
226.4053 81.139229 227.07101 81.748985 227.14261 82.546371 c
227.46396 84.596832 226.82448 86.681572 225.4106 88.192795 c
223.65276 90.366379 222.5847 93.021667 222.34511 95.813934 c
221.54085 100.7079 223.27493 105.67641 226.94334 108.98894 c
232.41705 108.29444 237.95345 108.25819 243.43567 108.88094 c
243.94148 104.77725 244.21738 99.377663 243.43567 97.850349 c
241.68834 94.610596 242.08685 87.282585 242.13284 86.464928 c
242.18155 85.649246 242.85373 85.013283 243.66559 85.014755 c
255.69763 85.014755 l
255.69763 82.669792 l
255.69763 81.817757 256.38385 81.127052 257.23038 81.127052 c
278.06036 81.127052 l
278.52277 81.118553 278.96426 81.320656 279.26178 81.677025 c
279.5593 82.033386 279.68106 82.50592 279.59311 82.962914 c
279.51648 83.410301 279.08731 85.631851 278.42822 88.038521 c
280.83557 86.27507 283.58121 85.035164 286.49048 84.397659 c
287.63968 84.154137 288.81073 84.030067 289.98514 84.027397 c
295.91684 84.027397 304.08636 87.174591 310.17136 101.96947 c
h
271.39294 169.9426 m
278.42822 169.58777 281.47839 167.61305 282.79654 166.00861 c
283.63208 165.0665 284.06204 163.82919 283.9921 162.5683 c
283.85666 161.71626 284.43307 160.91504 285.2796 160.77872 c
286.1261 160.6424 286.92215 161.2226 287.05759 162.07462 c
287.22876 164.16785 286.55469 166.2422 285.18762 167.82904 c
285.09567 167.93703 l
291.01205 167.93703 296.68323 167.10396 297.6795 165.65378 c
301.87921 159.57538 313.17554 140.96994 311.22897 119.12473 c
302.0325 121.34628 295.59497 125.6351 291.99301 131.9449 c
291.87039 132.14546 l
291.53165 132.72968 290.85431 133.02365 290.19971 132.87054 c
288.15704 132.39789 286.07211 132.13428 283.97678 132.08376 c
282.53598 136.32629 281.44772 142.38925 283.24106 144.03999 c
283.64627 144.41203 283.82352 144.9734 283.70602 145.51263 c
283.58853 146.05188 283.19412 146.48706 282.67142 146.65427 c
282.14871 146.82147 281.57706 146.69528 281.17184 146.32324 c
277.84579 143.23776 279.54712 135.9406 280.71201 132.17632 c
268.22015 133.08653 256.18811 141.03165 251.58987 152.60219 c
249.56665 157.60068 249.55133 161.56552 251.58987 164.38873 c
254.36414 168.49242 261.41476 170.45169 271.39294 169.9426 c
h
287.37946 129.26054 m
288.1918 129.3531 289.00418 129.46109 289.80121 129.61537 c
289.93915 129.38396 290.10776 129.16797 290.26102 128.952 c
290.28159 128.88332 290.30722 128.81628 290.33765 128.75143 c
294.4454 122.58047 294.3381 118.50764 293.84763 116.54836 c
287.71667 120.05038 282.85785 119.00132 279.76172 117.38144 c
279.39386 117.18089 279.026 116.98033 278.67346 116.74892 c
280.77332 123.33642 283.7775 127.7178 287.37946 129.26054 c
h
219.27962 95.320259 m
220.16861 89.797249 221.76266 87.760834 222.92755 86.264374 c
223.47931 85.700371 223.85724 84.987801 224.01581 84.212532 c
208.64238 84.212532 l
207.61543 87.09745 205.8681 92.805588 206.17465 96.029915 c
206.57317 100.11818 214.00699 110.09971 218.43661 111.92014 c
219.84764 110.71653 221.56033 109.92665 223.38737 109.63689 c
219.94682 105.73035 218.43796 100.47153 219.27962 95.320259 c
219.27962 95.320259 l
h
245.09103 88.100235 m
245.09103 90.938873 245.24431 94.81115 246.08733 96.38475 c
247.52811 99.084541 246.88435 106.01144 246.45518 109.32834 c
249.64569 109.82632 252.745 110.79858 255.65164 112.21326 c
255.65164 88.115662 l
245.09103 88.100235 l
h
258.71713 84.212532 m
258.71713 114.97477 l
258.71713 115.55911 258.38913 116.09331 257.86984 116.35464 c
257.35059 116.61596 256.72919 116.55956 256.26474 116.20896 c
252.73293 113.93362 248.71358 112.53751 244.53925 112.13612 c
244.53925 112.13612 l
238.64534 111.32253 232.66866 111.32253 226.77475 112.13612 c
226.77475 112.13612 l
225.11656 112.35043 223.48703 112.74883 221.91594 113.32404 c
223.92384 114.69707 226.51418 117.72084 227.15793 124.24664 c
227.23834 125.09866 226.61731 125.85499 225.7708 125.93594 c
224.92429 126.01688 224.17285 125.39178 224.09244 124.53976 c
223.3414 116.36324 219.12634 115.28332 218.91176 115.28332 c
218.91176 115.28332 l
212.78079 114.35767 203.6916 101.75349 203.18581 96.400177 c
202.83327 92.743881 204.44266 87.267151 205.45427 84.289665 c
189.60568 84.289665 l
192.10406 121.83996 l
192.88972 121.04054 193.78218 120.35515 194.75571 119.80354 c
195.50523 119.42032 196.42155 119.71629 196.80959 120.46692 c
196.99736 120.83093 197.03339 121.25522 196.90971 121.64602 c
196.78604 122.03683 196.51285 122.36198 196.15051 122.54962 c
195.76732 122.75018 186.95404 127.64066 190.31075 144.14798 c
191.65956 150.70462 195.90527 155.94994 202.92523 159.71423 c
208.44054 162.58897 214.57103 164.06142 220.78171 164.00305 c
247.83466 164.00305 l
246.45518 160.59358 246.73108 156.39734 248.72365 151.476 c
254.02693 138.42441 267.8063 129.58452 281.92288 129.09084 c
277.92242 124.94086 275.66928 118.29166 274.41245 112.75322 c
271.8414 109.31155 270.37613 105.16157 270.21271 100.8587 c
270.39539 97.948204 271.50229 95.173798 273.37018 92.944435 c
273.37399 92.635132 273.47012 92.334129 273.64606 92.080505 c
274.8609 89.58728 275.71759 86.932945 276.19043 84.197105 c
258.71713 84.212532 l
h
287.04227 87.405998 m
279.05664 89.072159 273.15558 96.662445 273.24756 100.81241 c
273.39243 104.24202 274.50348 107.55942 276.45099 110.3774 c
276.84061 110.58941 277.12006 110.9607 277.21738 111.39561 c
277.21738 111.39561 l
278.2916 112.7503 279.62613 113.87315 281.14117 114.69707 c
284.88107 116.65635 289.21875 116.10097 293.61774 113.15434 c
295.90152 111.44189 296.68323 107.09136 295.47235 103.26537 c
294.68689 100.17313 291.97372 97.969597 288.8049 97.850349 c
288.8049 97.850349 l
284.35995 97.850349 283.25638 100.82784 282.98047 102.10831 c
282.3624 104.94331 283.69748 107.84539 286.24524 109.20492 c
288.45239 110.19227 289.03482 109.20492 289.23407 108.89637 c
290.05688 107.2038 289.77802 105.17812 288.52902 103.77448 c
288.09915 103.43275 287.88306 102.88615 287.96216 102.3406 c
288.04126 101.79504 288.4035 101.33338 288.91248 101.12955 c
289.42142 100.9257 289.99976 101.01065 290.42963 101.35237 c
292.86545 103.74115 293.44586 107.45993 291.85507 110.48539 c
290.49094 112.75322 287.94656 113.32404 285.00369 112.02813 c
281.1102 110.10521 279.02264 105.75648 279.94565 101.49122 c
280.81519 97.353951 284.58337 94.496193 288.77426 94.795723 c
288.86621 94.795723 l
293.3721 94.864128 297.27881 97.950531 298.41522 102.33972 c
299.94797 106.96794 299.02832 111.93557 296.42264 114.77421 c
297.26929 117.23161 297.34952 119.89076 296.65256 122.39535 c
300.92999 119.39055 305.76904 117.29115 310.87643 116.22439 c
310.23358 111.77387 309.04428 107.42091 307.33578 103.26537 c
302.46167 91.293709 295.28842 85.693558 287.10358 87.421425 c
287.04227 87.405998 l
h
W
0 0 353 174 rc
174.21368 178.10674 m
331.74512 178.10674 l
331.74512 76.126793 l
174.21368 76.126793 l
h
f
Q
q
0 0 353 174 rc
1 0 0 -1 179.21368 173.10674 cm
130.95769 71.137268 m
132.74347 66.802673 133.99432 62.263988 134.68225 57.622864 c
138.4203 58.276684 142.20103 58.653099 145.99391 58.749065 c
145.99391 58.749065 l
146.84042 58.749065 147.52666 58.058357 147.52666 57.206326 c
147.52666 56.354294 146.84042 55.663586 145.99391 55.663586 c
142.29332 55.576218 138.60442 55.210079 134.95815 54.568237 c
135.05011 53.519176 135.12675 52.470112 135.15741 51.482758 c
136.83096 51.744652 138.5218 51.878738 140.21545 51.883873 c
142.2825 51.907959 144.34375 51.658997 146.34644 51.143356 c
146.89197 51.01543 147.32471 50.598179 147.47511 50.055096 c
147.62552 49.512016 147.46962 48.929607 147.0685 48.536087 c
146.66739 48.14257 146.08495 48.000622 145.54941 48.165867 c
142.14874 48.928234 138.63071 48.996433 135.20338 48.366425 c
135.0961 28.063965 124.96465 11.448654 120.93353 5.5553875 c
118.23591 1.6985375 105.97395 1.9145211 101.82021 2.1150773 c
98.803398 0.83821267 95.573845 0.14726047 92.301872 0.078660421 c
84.883385 -0.29159719 75.273079 0.47977284 70.506241 6.0027823 c
41.522045 6.0027823 l
34.810986 5.9393072 28.186262 7.5281701 22.224794 10.631002 c
18.117975 12.755898 14.567824 15.827034 11.863442 19.594322 c
9.929307 19.521719 8.0327721 20.145258 6.514164 21.353046 c
2.3297715 24.561945 0.13794699 31.59684 0 42.303455 c
0 43.155487 0.68623304 43.846195 1.5327444 43.846195 c
1.5327444 43.846195 l
2.3792558 43.846195 3.0654888 43.155487 3.0654888 42.303455 c
3.2800732 30.362648 5.9930305 25.672718 8.2921476 23.790575 c
8.7543583 23.41877 9.2715292 23.122061 9.824892 22.911213 c
9.0133266 24.610338 8.4110928 26.402918 8.0315809 28.249094 c
6.1156502 37.675236 7.8783064 43.846195 10.054804 47.687618 c
7.2192264 90.313522 l
7.1894188 90.741051 7.337647 91.161789 7.628386 91.474915 c
7.9191251 91.788033 8.3261709 91.965309 8.7519703 91.964256 c
46.396175 91.964256 l
47.191616 91.967506 47.857334 91.35775 47.928917 90.560364 c
48.250275 88.509895 47.610798 86.425163 46.196918 84.913933 c
44.439068 82.740356 43.371017 80.085068 43.131428 77.292801 c
42.327171 72.398834 44.061245 67.430321 47.72966 64.117798 c
53.203377 64.812294 58.739765 64.848549 64.221992 64.225792 c
64.727798 68.329483 65.003693 73.729073 64.221992 75.256386 c
62.474663 78.49614 62.873177 85.82415 62.919159 86.641808 c
62.967869 87.457489 63.640045 88.093452 64.451904 88.09198 c
76.483948 88.09198 l
76.483948 90.436943 l
76.483948 91.288979 77.170181 91.979683 78.016693 91.979683 c
98.846687 91.979683 l
99.309082 91.988182 99.750565 91.786079 100.0481 91.42971 c
100.34562 91.073349 100.46738 90.600815 100.37943 90.143822 c
100.3028 89.696426 99.873627 87.474884 99.214546 85.068207 c
101.6219 86.831665 104.36752 88.071571 107.27679 88.709076 c
108.426 88.952599 109.59703 89.076668 110.77144 89.07933 c
116.70316 89.07933 124.87269 85.932144 130.95769 71.137268 c
h
92.179253 3.1641405 m
99.214546 3.5189707 102.26471 5.4936781 103.58287 7.0981278 c
104.41839 8.0402393 104.84837 9.2775478 104.77841 10.538438 c
104.64297 11.39047 105.21941 12.191691 106.06592 12.328016 c
106.91243 12.464341 107.70846 11.884147 107.8439 11.032115 c
108.01508 8.9388809 107.341 6.8645287 105.97395 5.2776942 c
105.88199 5.1697025 l
111.79838 5.1697025 117.46954 6.0027823 118.46582 7.4529576 c
122.66553 13.531354 133.96187 32.136799 132.01527 53.981998 c
122.81881 51.760452 116.38129 47.471634 112.77934 41.161827 c
112.65672 40.961273 l
112.31797 40.37706 111.64063 40.083092 110.98602 40.236183 c
108.94335 40.708847 106.85844 40.97245 104.76308 41.02298 c
103.3223 36.780445 102.23405 30.717478 104.02737 29.066746 c
104.43259 28.694708 104.60983 28.133337 104.49234 27.594097 c
104.37484 27.054857 103.98045 26.619671 103.45773 26.452469 c
102.93501 26.285267 102.36338 26.411451 101.95816 26.783491 c
98.632103 29.868971 100.33345 37.16613 101.49834 40.930416 c
89.00647 40.020199 76.974426 32.075089 72.37619 20.504539 c
70.352966 15.506061 70.337639 11.541219 72.37619 8.7180042 c
75.150459 4.614316 82.201088 2.6550362 92.179253 3.1641405 c
h
108.16577 43.846195 m
108.97813 43.753632 109.79048 43.645638 110.58751 43.491364 c
110.72546 43.722775 110.89406 43.938759 111.04733 44.154743 c
111.06792 44.223412 111.09354 44.290447 111.12397 44.355301 c
115.23173 50.52626 115.12444 54.599094 114.63396 56.558372 c
108.50298 53.056355 103.64418 54.105415 100.54803 55.725292 c
100.18018 55.92585 99.812317 56.126408 99.459785 56.357819 c
101.55965 49.770317 104.56383 45.388935 108.16577 43.846195 c
h
40.065941 77.786476 m
40.954933 83.309486 42.548985 85.345901 43.713871 86.842361 c
44.265629 87.406357 44.643562 88.118935 44.80212 88.894203 c
29.428694 88.894203 l
28.401754 86.009277 26.654427 80.30114 26.960976 77.076813 c
27.359488 72.988556 34.793301 63.007027 39.222931 61.186592 c
40.633957 62.390205 42.346653 63.180088 44.173695 63.469849 c
40.733143 67.376389 39.224274 72.635201 40.065941 77.786476 c
40.065941 77.786476 l
h
65.877357 85.0065 m
65.877357 82.167862 66.030632 78.295578 66.873642 76.721985 c
68.314423 74.022194 67.67067 67.095291 67.241501 63.778397 c
70.431999 63.280411 73.531311 62.308159 76.437965 60.893475 c
76.437965 84.991074 l
65.877357 85.0065 l
h
79.503456 88.894203 m
79.503456 58.131969 l
79.503456 57.547623 79.175446 57.013428 78.656174 56.752098 c
78.136902 56.490772 77.515511 56.547169 77.051064 56.897778 c
73.519249 59.173111 69.499893 60.569225 65.325569 60.970612 c
65.325569 60.970612 l
59.431652 61.784203 53.454979 61.784203 47.561062 60.970612 c
47.561062 60.970612 l
45.902874 60.756306 44.27335 60.35791 42.702259 59.7827 c
44.710155 58.40966 47.300495 55.385891 47.944244 48.8601 c
48.024666 48.008068 47.403625 47.251743 46.557114 47.170799 c
45.710602 47.089859 44.959175 47.714947 44.878757 48.566978 c
44.127712 56.743504 39.912666 57.823421 39.698082 57.823421 c
39.698082 57.823421 l
33.567104 58.749065 24.477928 71.353249 23.972122 76.706558 c
23.619593 80.362854 25.228973 85.839577 26.240585 88.81707 c
10.392007 88.81707 l
12.890381 51.266777 l
13.676048 52.066196 14.568503 52.751583 15.542028 53.303192 c
16.29155 53.686413 17.207878 53.39045 17.595905 52.639812 c
17.783676 52.275803 17.819706 51.851517 17.696033 51.460716 c
17.572363 51.069912 17.29917 50.744762 16.936827 50.557114 c
16.55364 50.35656 7.7403593 45.466072 11.09707 28.958754 c
12.445885 22.402109 16.691587 17.156794 23.711557 13.392507 c
29.226851 10.517756 35.357349 9.0453167 41.568027 9.1036901 c
68.620972 9.1036901 l
67.241501 12.513145 67.517395 16.709398 69.509964 21.630739 c
74.813255 34.68232 88.592628 43.522221 102.70921 44.015896 c
98.70874 48.165867 96.455605 54.815079 95.198761 60.353516 c
92.627731 63.795185 91.162453 67.945168 90.999039 72.248039 c
91.181717 75.158524 92.288589 77.932938 94.156494 80.162292 c
94.160324 80.471603 94.256447 80.772606 94.432388 81.02623 c
95.647224 83.519455 96.503906 86.17379 96.976738 88.90963 c
79.503456 88.894203 l
h
107.82858 85.700729 m
99.842972 84.034576 93.94191 76.44429 94.033875 72.294319 c
94.178757 68.864716 95.289787 65.547318 97.237305 62.729332 c
97.62693 62.517323 97.90638 62.146038 98.003677 61.711124 c
98.003677 61.711124 l
99.077927 60.356434 100.41245 59.233585 101.92751 58.40966 c
105.6674 56.450382 110.00507 57.005768 114.40405 59.9524 c
116.68784 61.664845 117.46954 66.015373 116.25867 69.841362 c
115.47321 72.933609 112.76004 75.137138 109.59122 75.256386 c
109.59122 75.256386 l
105.14627 75.256386 104.04269 72.278893 103.7668 70.998421 c
103.14872 68.163414 104.4838 65.261345 107.03155 63.901817 c
109.23869 62.914463 109.82114 63.901817 110.02039 64.210365 c
110.84319 65.902939 110.56434 67.928612 109.31533 69.33226 c
108.88547 69.673988 108.66939 70.220573 108.74848 70.766136 c
108.82757 71.311699 109.18983 71.773354 109.69878 71.977188 c
110.20773 72.18103 110.78607 72.096085 111.21593 71.754364 c
113.65176 69.365585 114.23218 65.646805 112.64139 62.621342 c
111.27724 60.353516 108.73289 59.7827 105.79002 61.078602 c
101.8965 63.001526 99.808975 67.350258 100.73196 71.615517 c
101.60149 75.752785 105.3697 78.610542 109.56057 78.311005 c
109.65253 78.311005 l
114.15842 78.242607 118.06511 75.156197 119.20154 70.767006 c
120.73428 66.138786 119.81464 61.171165 117.20897 58.332523 c
118.05561 55.875122 118.13583 53.215969 117.43888 50.711388 c
121.71632 53.716187 126.55536 55.815578 131.66275 56.882347 c
131.01991 61.332859 129.8306 65.685822 128.1221 69.841362 c
123.24798 81.813026 116.07474 87.413177 107.88988 85.685303 c
107.82858 85.700729 l
h
S
Q
q
258.1347 155.8111 m
258.8226 156.30228 258.987 157.26057 258.50256 157.95551 c
257.92593 158.73878 257.6933 159.72563 257.8588 160.68616 c
258.19601 161.58095 259.52948 162.05919 260.57175 162.30603 c
266.47281 163.64821 276.97214 160.76329 279.34787 153.04959 c
279.55594 152.3811 280.18536 151.93764 280.88062 151.96967 c
281.03302 151.9464 281.18805 151.9464 281.34045 151.96967 c
282.14243 152.22792 282.58728 153.08897 282.33673 153.8981 c
279.40918 163.2471 267.11658 166.81084 259.95865 165.1601 c
257.81815 164.92624 255.95638 163.57936 255.05388 161.6118 c
254.56375 159.73065 254.9348 157.72748 256.06549 156.1505 c
256.5585 155.50603 257.4639 155.35751 258.1347 155.8111 c
h
W
0 0 353 174 rc
249.84227 170.54979 m
287.40656 170.54979 l
287.40656 146.95222 l
249.84227 146.95222 l
h
f
ep
end
